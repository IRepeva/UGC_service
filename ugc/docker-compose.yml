version: '3.5'

services:
  ugc:
    build:
      context: ./ugc
      dockerfile: Dockerfile
    container_name: ugc
    depends_on:
      - shard01-a
    ports:
      - "8000"
    env_file:
      - .env
    restart: always

  nginx:
    image: nginx:1.21.6
    container_name: nginx
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/configs:/etc/nginx/conf.d:ro
      - /tmp/logs/nginx/:/var/log/nginx/
    ports:
      - '80:80'
    depends_on:
      - ugc

  logstash:
      image: docker.elastic.co/logstash/logstash:7.10.2
      container_name: logstash
      environment:
        XPACK_MONITORING_ENABLED: "false"
        ES_HOST: "elasticsearch:9200"
      ports:
        - "5044:5044/udp"
      volumes:
        - ./deploy/logs/logstash.conf:/config/logstash.conf:ro
        - /tmp/logs/nginx/:/var/log/nginx/:ro
      command: logstash -f /config/logstash.conf
      depends_on:
        - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.3.2
    container_name: filebeat
    volumes:
      - ./deploy/logs/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /tmp/logs/nginx:/var/log/nginx:ro
    command: filebeat -e -strict.perms=false
    depends_on:
      - ugc
      - nginx
      - logstash
      - elasticsearch
      - kibana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    ports:
      - "9200"
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  ###### MONGO ######

  #### Routers ####
  router01:
    image: mongo:6.0.1
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    ports:
      - '27017'

  router02:
    image: mongo:6.0.1
    container_name: router-02
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    ports:
      - '27017'
    links:
      - router01

  #### Config Servers ####
  configsvr01:
    image: mongo:6.0.1
    container_name: mongo-config-01
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    ports:
      - '27017'
    links:
      - shard01-a
      - shard02-a

  configsvr02:
    image: mongo:6.0.1
    container_name: mongo-config-02
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    ports:
      - '27017'
    links:
      - configsvr01

  configsvr03:
    image: mongo:6.0.1
    container_name: mongo-config-03
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    ports:
      - '27017'
    links:
      - configsvr02

  #### Shards ####

  ## Shards 01
  shard01-a:
    image: mongo:6.0.1
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - '27017'
    links:
      - shard01-b
      - shard01-c

  shard01-b:
    image: mongo:6.0.1
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - '27017'

  shard01-c:
    image: mongo:6.0.1
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - '27017'

  ## Shards 02
  shard02-a:
    image: mongo:6.0.1
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - '27017'
    links:
      - shard02-b
      - shard02-c

  shard02-b:
    image: mongo:6.0.1
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - '27017'

  shard02-c:
    image: mongo:6.0.1
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - '27017'
